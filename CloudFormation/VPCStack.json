{
    "AWSTemplateFormatVersion":"2010-09-09",
    "Description":"The FirstFuel Production Stack.",
    "Parameters":{
        "VPCSubnetId":{
            "Type":"String",
            "Description":"SubnetId of an existing subnet in your Virtual Private Cloud (VPC)"
        },
        "VPCSecurityGroupId":{
            "Type":"String",
            "Description":"The SecurityGroupId of an existing EC2 SecurityGroup in your Virtual Private Cloud (VPC)"
        },
        "KeyName":{
            "Description":"The name of an existing EC2 KeyPair enabling allow SSH access to the instance",
            "Type":"String",
            "Default":"firstfuel-dev-stephen"
        },
        "WebServerCodeLocation":{
            "Description":"Location of Rails source code on web server",
            "Type":"String",
            "Default":"/mnt/applications/firstfuel"
        },
        "WebServerTarball":{
            "Description":"Name of the web server tarball",
            "Type":"String",
            "Default":"web.tar.bz2"
        },
        "ApplicationServerTarball":{
            "Description":"Name of the application server tarball",
            "Type":"String",
            "Default":"war.tar.bz2"
        },
        "ApplicationServerPort":{
            "Description":"TCP/IP port for the Java application server",
            "Type":"String",
            "Default":"8080"
        },
        "DatabasePort":{
            "Description":"TCP/IP port number for the database",
            "Type":"String",
            "Default":"3306"
        },
        "DatabaseUser":{
            "Description":"Database admin account username",
            "Type":"String",
            "Default":"iblogix",
            "NoEcho":"true",
            "MinLength":"1",
            "MaxLength":"16",
            "AllowedPattern":"[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription":"must begin with a letter and contain only alphanumeric characters."
        },
        "DatabasePassword":{
            "Description":"Database admin account password",
            "Type":"String",
            "Default":"iblogix123",
            "NoEcho":"true",
            "MinLength":"1",
            "MaxLength":"41",
            "AllowedPattern":"[a-zA-Z0-9]*",
            "ConstraintDescription":"must contain only alphanumeric characters."
        },
        "DatabaseName":{
            "Description":"The name of the database to use",
            "Type":"String",
            "Default":"iblogix_production"
        },
        "S3DeploymentBucket":{
            "Description":"Name of the S3 bucket containing deployments",
            "Type":"String",
            "Default":"firstfuel-deployment",
            "MinLength":"1",
            "MaxLength":"41",
            "AllowedPattern":"[a-zA-Z][-a-zA-Z0-9]*",
            "ConstraintDescription":"must contain only alphanumeric characters and dashes."
        },
        "DatabaseSnapshot":{
            "Description":"Snapshot from which to initialize the database",
            "Type":"String",
            "Default":"staging-2011-11-27"
        }
    },
    "Mappings":{
        "FirstFuelStack":{
            "WebServer":{
                "AMI":"ami-65de150c",
                "InstanceType":"m1.small"
            },
            "ApplicationServer":{
                "AMI":"ami-dd3df3b4",
                "InstanceType":"m1.large"
            },
            "Database":{
                "InstanceType":"db.m1.small"
            }
        },
        "AWSRegionCapabilities":{
            "us-east-1":{
                "RDSMultiAZ":"false"
            },
            "us-west-1":{
                "RDSMultiAZ":"false"
            },
            "us-west-2":{
                "RDSMultiAZ":"false"
            },
            "eu-west-1":{
                "RDSMultiAZ":"false"
            },
            "ap-southeast-1":{
                "RDSMultiAZ":"false"
            },
            "ap-northeast-1":{
                "RDSMultiAZ":"false"
            }
        }
    },
    "Resources":{
        "CloudFormationUser":{
            "Type":"AWS::IAM::User",
            "Properties":{
                "Path":"/",
                "Policies":[
                    {
                        "PolicyName":"root",
                        "PolicyDocument":{
                            "Statement":[
                                {
                                    "Effect":"Allow",
                                    "Action":"cloudformation:DescribeStackResource",
                                    "Resource":"*"
                                },
                                {
                                    "Effect":"Allow",
                                    "Action":"s3:*",
                                    "Resource":"*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "S3DeploymentBucketPolicy":{
            "Type":"AWS::S3::BucketPolicy",
            "Properties":{
                "PolicyDocument":{
                    "Version":"2008-10-17",
                    "Id":"DeployerReadPolicy",
                    "Statement":[
                        {
                            "Sid":"ReadAccess",
                            "Action":[
                                "s3:GetObject"
                            ],
                            "Effect":"Allow",
                            "Resource":{
                                "Fn::Join":[
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {
                                            "Ref":"S3DeploymentBucket"
                                        }
                                        ,
                                        "/*"
                                    ]
                                ]
                            },
                            "Principal":{
                                "AWS":{
                                    "Fn::GetAtt":[
                                        "CloudFormationUser",
                                        "Arn"
                                    ]
                                }
                            }
                        }
                    ]
                },
                "Bucket":{
                    "Ref":"S3DeploymentBucket"
                }
            }
        },
        "HostKeys":{
            "Type":"AWS::IAM::AccessKey",
            "Properties":{
                "UserName":{
                    "Ref":"CloudFormationUser"
                }
            }
        },
        "WebServerLoadBalancer":{
            "Type":"AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties":{
                "AvailabilityZones":{
                    "Fn::GetAZs":""
                },
                "LBCookieStickinessPolicy":[
                    {
                        "PolicyName":"CookieBasedPolicy",
                        "CookieExpirationPeriod":"30"
                    }
                ],
                "Listeners":[
                    {
                        "LoadBalancerPort":80,
                        "InstancePort":80,
                        "Protocol":"HTTP",
                        "PolicyNames":[
                            "CookieBasedPolicy"
                        ]
                    }
                ],
                "HealthCheck":{
                    "Target":{
                        "Fn::Join":[
                            "",
                            [
                                "HTTP:80/session/new"
                            ]
                        ]
                    },
                    "HealthyThreshold":"2",
                    "UnhealthyThreshold":"5",
                    "Interval":"10",
                    "Timeout":"5"
                }
            }
        },
        "WebServerLaunchConfig":{
            "Type":"AWS::AutoScaling::LaunchConfiguration",
            "Metadata":{
                "AWS::CloudFormation::Init":{
                    "config":{
                        "packages":{
                            "yum":{
                                "s3cmd":[
                                    
                                ]
                            }
                        },
                        "files":{
                            "/etc/yum.repos.d/epel.repo":{
                                "source":"https://s3.amazonaws.com/cloudformation-examples/enable-epel-on-amazon-linux-ami",
                                "mode":"000644",
                                "owner":"root",
                                "group":"root"
                            },
                            "/mnt/.s3cfg":{
                                "content":{
                                    "Fn::Join":[
                                        "",
                                        [
                                            "[default]\n",
                                            "access_key = ",
                                            {
                                                "Ref":"HostKeys"
                                            },
                                            "\n",
                                            "secret_key = ",
                                            {
                                                "Fn::GetAtt":[
                                                    "HostKeys",
                                                    "SecretAccessKey"
                                                ]
                                            },
                                            "\n",
                                            "use_https = True\n"
                                        ]
                                    ]
                                },
                                "mode":"000644",
                                "owner":"root",
                                "group":"root"
                            },
                            "/mnt/database.yml":{
                                "content":{
                                    "Fn::Join":[
                                        "",
                                        [
                                            "production:\n",
                                            "  adapter: mysql\n",
                                            "  encoding: utf8\n",
                                            "  database: ",
                                            {
                                                "Ref":"DatabaseName"
                                            },
                                            "\n",
                                            "  username: ",
                                            {
                                                "Ref":"DatabaseUser"
                                            },
                                            "\n",
                                            "  password: ",
                                            {
                                                "Ref":"DatabasePassword"
                                            },
                                            "\n",
                                            "  host: ",
                                            {
                                                "Fn::GetAtt":[
                                                    "DatabaseServer",
                                                    "Endpoint.Address"
                                                ]
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            }
                        },
                        "services":{
                            "sysvinit":{
                                "httpd":{
                                    "enabled":"true",
                                    "ensureRunning":"true"
                                }
                            }
                        }
                    }
                }
            },
            "Properties":{
                "KeyName":{
                    "Ref":"KeyName"
                },
                "InstanceType":{
                    "Fn::FindInMap":[
                        "FirstFuelStack",
                        "WebServer",
                        "InstanceType"
                    ]
                },
                "ImageId":{
                    "Fn::FindInMap":[
                        "FirstFuelStack",
                        "WebServer",
                        "AMI"
                    ]
                },
                "SecurityGroups":[
                    {
                        "Ref":"WebServerSecurityGroup"
                    }
                ],
                "SubnetId":{
                    "Ref":"VPCSubnetId"
                },
                "UserData":{
                    "Fn::Base64":{
                        "Fn::Join":[
                            "",
                            [
                                "#!/bin/bash\n",
                                "/opt/aws/bin/cfn-init -s ",
                                {
                                    "Ref":"AWS::StackName"
                                },
                                " -r WebServerLaunchConfig ",
                                "         --access-key ",
                                {
                                    "Ref":"HostKeys"
                                },
                                "         --secret-key ",
                                {
                                    "Fn::GetAtt":[
                                        "HostKeys",
                                        "SecretAccessKey"
                                    ]
                                },
                                "         --region ",
                                {
                                    "Ref":"AWS::Region"
                                },
                                "\n",
                                "# Fetch the code\n",
                                "s3cmd -c /mnt/.s3cfg get s3://",
                                {
                                    "Ref":"S3DeploymentBucket"
                                },
                                "/",
                                {
                                    "Ref":"WebServerTarball"
                                },
                                " /mnt\n",
                                "# Unlink existing directory if present\n",
                                "rm -rf ",
                                {
                                    "Ref":"WebServerCodeLocation"
                                },
                                "\n",
                                "# Make an empty directory\n",
                                "mkdir -p ",
                                {
                                    "Ref":"WebServerCodeLocation"
                                },
                                "\n",
                                "# Expand the code into it\n",
                                "tar xf /mnt/",
                                {
                                    "Ref":"WebServerTarball"
                                },
                                " -C ",
                                {
                                    "Ref":"WebServerCodeLocation"
                                },
                                "\n",
                                "# Fix up the broken link for log\n",
                                "rm -f ",
                                {
                                    "Ref":"WebServerCodeLocation"
                                },
                                "/log\n",
                                "mkdir -p ",
                                {
                                    "Ref":"WebServerCodeLocation"
                                },
                                "/log\n",
                                "# Copy the database credentials\n",
                                "cp /mnt/database.yml ",
                                {
                                    "Ref":"WebServerCodeLocation"
                                },
                                "/config\n",
                                "# Finally restart Apache\n",
                                "service httpd restart\n"
                            ]
                        ]
                    }
                }
            }
        },
        "WebServerScaleUpPolicy":{
            "Type":"AWS::AutoScaling::ScalingPolicy",
            "Properties":{
                "AdjustmentType":"ChangeInCapacity",
                "AutoScalingGroupName":{
                    "Ref":"WebServerGroup"
                },
                "Cooldown":"60",
                "ScalingAdjustment":"1"
            }
        },
        "WebServerScaleDownPolicy":{
            "Type":"AWS::AutoScaling::ScalingPolicy",
            "Properties":{
                "AdjustmentType":"ChangeInCapacity",
                "AutoScalingGroupName":{
                    "Ref":"WebServerGroup"
                },
                "Cooldown":"60",
                "ScalingAdjustment":"-1"
            }
        },
        "WebServerCPUAlarmHigh":{
            "Type":"AWS::CloudWatch::Alarm",
            "Properties":{
                "AlarmDescription":"Scale-up if CPU > 90% for 1 minute",
                "MetricName":"CPUUtilization",
                "Namespace":"AWS/EC2",
                "Statistic":"Average",
                "Period":"60",
                "EvaluationPeriods":"1",
                "Threshold":"90",
                "AlarmActions":[
                    {
                        "Ref":"WebServerScaleUpPolicy"
                    }
                ],
                "Dimensions":[
                    {
                        "Name":"AutoScalingGroupName",
                        "Value":{
                            "Ref":"WebServerGroup"
                        }
                    }
                ],
                "ComparisonOperator":"GreaterThanThreshold"
            }
        },
        "WebServerCPUAlarmLow":{
            "Type":"AWS::CloudWatch::Alarm",
            "Properties":{
                "AlarmDescription":"Scale-down if CPU < 70% for 10 minutes",
                "MetricName":"CPUUtilization",
                "Namespace":"AWS/EC2",
                "Statistic":"Average",
                "Period":"300",
                "EvaluationPeriods":"2",
                "Threshold":"70",
                "AlarmActions":[
                    {
                        "Ref":"WebServerScaleDownPolicy"
                    }
                ],
                "Dimensions":[
                    {
                        "Name":"AutoScalingGroupName",
                        "Value":{
                            "Ref":"WebServerGroup"
                        }
                    }
                ],
                "ComparisonOperator":"LessThanThreshold"
            }
        },
        "WebServerGroup":{
            "Type":"AWS::AutoScaling::AutoScalingGroup",
            "Properties":{
                "AvailabilityZones":{
                    "Fn::GetAZs":""
                },
                "LaunchConfigurationName":{
                    "Ref":"WebServerLaunchConfig"
                },
                "MinSize":"1",
                "MaxSize":"5",
                "LoadBalancerNames":[
                    {
                        "Ref":"WebServerLoadBalancer"
                    }
                ]
            }
        },
        "WebServerSecurityGroup":{
            "Type":"AWS::EC2::SecurityGroup",
            "Properties":{
                "GroupDescription":"HTTP and SSH access",
                "SecurityGroupIngress":[
                    {
                        "IpProtocol":"tcp",
                        "FromPort":"22",
                        "ToPort":"22",
                        "CidrIp":"0.0.0.0/0"
                    },
                    {
                        "IpProtocol":"tcp",
                        "FromPort":80,
                        "ToPort":80,
                        "CidrIp":"0.0.0.0/0"
                    },
                    {
                        "IpProtocol":"tcp",
                        "FromPort":443,
                        "ToPort":443,
                        "CidrIp":"0.0.0.0/0"
                    }
                ]
            }
        },
        "ApplicationServerLoadBalancer":{
            "Type":"AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties":{
                "AvailabilityZones":{
                    "Fn::GetAZs":""
                },
                "LBCookieStickinessPolicy":[
                    {
                        "PolicyName":"CookieBasedPolicy",
                        "CookieExpirationPeriod":"30"
                    }
                ],
                "Listeners":[
                    {
                        "LoadBalancerPort":{
                            "Ref":"ApplicationServerPort"
                        },
                        "InstancePort":{
                            "Ref":"ApplicationServerPort"
                        },
                        "Protocol":"HTTP",
                        "PolicyNames":[
                            "CookieBasedPolicy"
                        ]
                    }
                ],
                "HealthCheck":{
                    "Target":{
                        "Fn::Join":[
                            "",
                            [
                                "HTTP:",
                                {
                                    "Ref":"ApplicationServerPort"
                                },
                                "/"
                            ]
                        ]
                    },
                    "HealthyThreshold":"2",
                    "UnhealthyThreshold":"5",
                    "Interval":"10",
                    "Timeout":"5"
                }
            }
        },
        "ApplicationServerLaunchConfig":{
            "Type":"AWS::AutoScaling::LaunchConfiguration",
            "Metadata":{
                "AWS::CloudFormation::Init":{
                    "config":{
                        "packages":{
                            "yum":{
                                "s3cmd":[
                                    
                                ]
                            }
                        },
                        "files":{
                            "/etc/yum.repos.d/epel.repo":{
                                "source":"https://s3.amazonaws.com/cloudformation-examples/enable-epel-on-amazon-linux-ami",
                                "mode":"000644",
                                "owner":"root",
                                "group":"root"
                            },
                            "/mnt/.s3cfg":{
                                "content":{
                                    "Fn::Join":[
                                        "",
                                        [
                                            "[default]\n",
                                            "access_key = ",
                                            {
                                                "Ref":"HostKeys"
                                            },
                                            "\n",
                                            "secret_key = ",
                                            {
                                                "Fn::GetAtt":[
                                                    "HostKeys",
                                                    "SecretAccessKey"
                                                ]
                                            },
                                            "\n",
                                            "use_https = True\n"
                                        ]
                                    ]
                                },
                                "mode":"000644",
                                "owner":"root",
                                "group":"root"
                            }
                        },
                        "services":{
                            "sysvinit":{
                                "tomcat6":{
                                    "enabled":"true",
                                    "ensureRunning":"true"
                                }
                            }
                        }
                    }
                }
            },
            "Properties":{
                "KeyName":{
                    "Ref":"KeyName"
                },
                "InstanceType":{
                    "Fn::FindInMap":[
                        "FirstFuelStack",
                        "ApplicationServer",
                        "InstanceType"
                    ]
                },
                "ImageId":{
                    "Fn::FindInMap":[
                        "FirstFuelStack",
                        "ApplicationServer",
                        "AMI"
                    ]
                },
                "SecurityGroups":[
                    {
                        "Ref":"ApplicationServerSecurityGroup"
                    }
                ],
                "SubnetId":{
                    "Ref":"VPCSubnetId"
                },
                "UserData":{
                    "Fn::Base64":{
                        "Fn::Join":[
                            "",
                            [
                                "#!/bin/bash\n",
                                "/opt/aws/bin/cfn-init -s ",
                                {
                                    "Ref":"AWS::StackName"
                                },
                                " -r ApplicationServerLaunchConfig ",
                                "         --access-key ",
                                {
                                    "Ref":"HostKeys"
                                },
                                "         --secret-key ",
                                {
                                    "Fn::GetAtt":[
                                        "HostKeys",
                                        "SecretAccessKey"
                                    ]
                                },
                                "         --region ",
                                {
                                    "Ref":"AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "ApplicationServerScaleUpPolicy":{
            "Type":"AWS::AutoScaling::ScalingPolicy",
            "Properties":{
                "AdjustmentType":"ChangeInCapacity",
                "AutoScalingGroupName":{
                    "Ref":"ApplicationServerGroup"
                },
                "Cooldown":"60",
                "ScalingAdjustment":"1"
            }
        },
        "ApplicationServerScaleDownPolicy":{
            "Type":"AWS::AutoScaling::ScalingPolicy",
            "Properties":{
                "AdjustmentType":"ChangeInCapacity",
                "AutoScalingGroupName":{
                    "Ref":"ApplicationServerGroup"
                },
                "Cooldown":"60",
                "ScalingAdjustment":"-1"
            }
        },
        "ApplicationServerCPUAlarmHigh":{
            "Type":"AWS::CloudWatch::Alarm",
            "Properties":{
                "AlarmDescription":"Scale-up if CPU > 90% for 1 minute",
                "MetricName":"CPUUtilization",
                "Namespace":"AWS/EC2",
                "Statistic":"Average",
                "Period":"60",
                "EvaluationPeriods":"1",
                "Threshold":"90",
                "AlarmActions":[
                    {
                        "Ref":"ApplicationServerScaleUpPolicy"
                    }
                ],
                "Dimensions":[
                    {
                        "Name":"AutoScalingGroupName",
                        "Value":{
                            "Ref":"ApplicationServerGroup"
                        }
                    }
                ],
                "ComparisonOperator":"GreaterThanThreshold"
            }
        },
        "ApplicationServerCPUAlarmLow":{
            "Type":"AWS::CloudWatch::Alarm",
            "Properties":{
                "AlarmDescription":"Scale-down if CPU < 70% for 10 minutes",
                "MetricName":"CPUUtilization",
                "Namespace":"AWS/EC2",
                "Statistic":"Average",
                "Period":"300",
                "EvaluationPeriods":"2",
                "Threshold":"70",
                "AlarmActions":[
                    {
                        "Ref":"ApplicationServerScaleDownPolicy"
                    }
                ],
                "Dimensions":[
                    {
                        "Name":"AutoScalingGroupName",
                        "Value":{
                            "Ref":"ApplicationServerGroup"
                        }
                    }
                ],
                "ComparisonOperator":"LessThanThreshold"
            }
        },
        "ApplicationServerGroup":{
            "Type":"AWS::AutoScaling::AutoScalingGroup",
            "Properties":{
                "AvailabilityZones":{
                    "Fn::GetAZs":""
                },
                "LaunchConfigurationName":{
                    "Ref":"ApplicationServerLaunchConfig"
                },
                "MinSize":"1",
                "MaxSize":"3",
                "LoadBalancerNames":[
                    {
                        "Ref":"ApplicationServerLoadBalancer"
                    }
                ]
            }
        },
        "ApplicationServerSecurityGroup":{
            "Type":"AWS::EC2::SecurityGroup",
            "Properties":{
                "GroupDescription":"HTTP and SSH access",
                "SecurityGroupIngress":[
                    {
                        "IpProtocol":"tcp",
                        "FromPort":"22",
                        "ToPort":"22",
                        "CidrIp":"0.0.0.0/0"
                    },
                    {
                        "IpProtocol":"tcp",
                        "FromPort":{
                            "Ref":"ApplicationServerPort"
                        },
                        "ToPort":{
                            "Ref":"ApplicationServerPort"
                        },
                        "CidrIp":"0.0.0.0/0"
                    }
                ]
            }
        },
        "WebDBSecurityGroup":{
            "Type":"AWS::RDS::DBSecurityGroup",
            "Properties":{
                "GroupDescription":"Database Access from Web Server",
                "DBSecurityGroupIngress":{
                    "EC2SecurityGroupName":{
                        "Ref":"WebServerSecurityGroup"
                    }
                }
            }
        },
        "ApplicationDBSecurityGroup":{
            "Type":"AWS::RDS::DBSecurityGroup",
            "Properties":{
                "GroupDescription":"Database Access from Application Server",
                "DBSecurityGroupIngress":{
                    "EC2SecurityGroupName":{
                        "Ref":"ApplicationServerSecurityGroup"
                    }
                }
            }
        },
        "DatabaseServer":{
            "Type":"AWS::RDS::DBInstance",
            "Properties":{
                "AllocatedStorage":"5",
                "DBSnapshotIdentifier":{
                    "Ref":"DatabaseSnapshot"
                },
                "BackupRetentionPeriod":"1",
                "DBInstanceClass":{
                    "Fn::FindInMap":[
                        "FirstFuelStack",
                        "Database",
                        "InstanceType"
                    ]
                },
                "MasterUsername":{
                    "Ref":"DatabaseUser"
                },
                "MasterUserPassword":{
                    "Ref":"DatabasePassword"
                },
                "DBSecurityGroups":[
                    {
                        "Ref":"WebDBSecurityGroup"
                    },
                    {
                        "Ref":"ApplicationDBSecurityGroup"
                    }
                ],
                "Port":{
                    "Ref":"DatabasePort"
                },
                "MultiAZ":{
                    "Fn::FindInMap":[
                        "AWSRegionCapabilities",
                        {
                            "Ref":"AWS::Region"
                        },
                        "RDSMultiAZ"
                    ]
                },
                "Engine":"MySQL"
            },
            "DeletionPolicy":"Snapshot"
        }
    }
}